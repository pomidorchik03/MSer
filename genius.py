import lyricsgenius
from config import GENIUS_ACCESS_TOKEN, PROXIES
import time
import requests
from bs4 import BeautifulSoup
from urllib.parse import quote_plus

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
HEADERS = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0 Safari/537.36"
}


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ —Å User-Agent –∏ –ø—Ä–æ–∫—Å–∏
session = requests.Session()
session.headers.update(HEADERS)
if PROXIES:
    session.proxies.update(PROXIES)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Genius —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π —Å–µ—Å—Å–∏–µ–π
genius = lyricsgenius.Genius(
    GENIUS_ACCESS_TOKEN, user_agent=session, timeout=15, retries=3
)


def get_lyrics_from_url(url: str):
    """–ü–∞—Ä—Å–∏—Ç —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏–∑ Genius"""
    try:
        print("–ü–∞—Ä—Å–∏–º")
        response = session.get(url, timeout=10)
        soup = BeautifulSoup(response.text, "html.parser")
        container = soup.find_all("div", {"data-lyrics-container": "true"})
        if container:
            trash = soup.find("div", {"data-exclude-from-selection": "true"})
            if trash:
                trash.decompose()
        if container:
            print("‚úÖ –¢–µ–∫—Å—Ç –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ URL")
            lyrics = ""
            for p in container:
                if p.get_text() == "":
                    continue
                lyrics += p.get_text(separator="\n").strip() + "\n"
            return lyrics
        else:
            print("‚ùå –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ URL: {e}")
        return None


def get_lyrics_direct(song_name: str, artist_name: str):
    """–†–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥: –ø–∞—Ä—Å–∏–Ω–≥ —Ç–µ–∫—Å—Ç–∞ —Å —Å–∞–π—Ç–∞ Genius"""
    try:
        # –ü–æ–∏—Å–∫ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ Google
        query = quote_plus(f"{song_name} {artist_name} site:genius.com")
        search_url = f"https://www.google.com/search?q={query}"
        response = session.get(search_url)
        soup = BeautifulSoup(response.text, "html.parser")

        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–µ—Å–Ω—é
        genius_link = None
        for link in soup.find_all("a"):
            href = link.get("href")
            if "genius.com" in href and "/lyrics" in href:
                genius_link = href.split("/url?q=")[-1].split("&")[0]
                break

        if not genius_link:
            print(f"[–ü–∞—Ä—Å–∏–Ω–≥] –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è {song_name} ‚Äî {artist_name}")
            return None

        # –ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏
        song_response = session.get(genius_link)
        song_soup = BeautifulSoup(song_response.text, "html.parser")
        lyrics_div = song_soup.find("div", {"data-lyrics-container": "true"})

        time.sleep(3)
        return lyrics_div.get_text(separator="\n").strip() if lyrics_div else None

    except Exception as e:
        print(f"[–ü–∞—Ä—Å–∏–Ω–≥] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {e}")
        return None


def get_lyrics_ovh(song_name: str, artist_name: str):
    """–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π API: lyrics.ovh"""
    try:
        url = f"https://api.lyrics.ovh/v1/{quote_plus(artist_name)}/{quote_plus(song_name)}"
        response = session.get(url, timeout=10)
        if response.status_code == 200:
            data = response.json()
            time.sleep(2)
            return data.get("lyrics")
        return None
    except Exception as e:
        print(f"[Lyrics.ovh] –û—à–∏–±–∫–∞: {e}")
        return None


def get_lyrics_safe(song_name: str, artist_name: str):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ —á–µ—Ä–µ–∑ Genius API —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
    """
    try:
        time.sleep(3)  # –ó–∞—â–∏—Ç–∞ –æ—Ç —á–∞—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        search_query = f"{song_name} {artist_name}"
        results = genius.search_songs(search_query)

        if not results or not results.get("hits"):
            print(f"‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {search_query}")
            return None

        # –ü–æ–∏—Å–∫ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        for hit in results["hits"]:
            song_data = hit["result"]
            if (
                song_name.lower() in song_data["title"].lower()
                and song_data["primary_artist"]["name"].lower() == artist_name.lower()
            ):

                song_id = song_data["id"]
                full_song = genius.song(song_id)
                url = full_song["song"]["url"]
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ API
                if full_song and full_song.get("lyrics"):
                    print("‚úÖ –¢–µ–∫—Å—Ç –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ Genius API")
                    print(full_song["lyrics"].strip())
                    return full_song["lyrics"].strip()

                # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–µ—Ç, –Ω–æ –µ—Å—Ç—å URL ‚Äî –ø–∞—Ä—Å–∏–º –µ–≥–æ

                elif full_song and url:
                    print("üìé –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞–ø—Ä—è–º—É—é, –ø—Ä–æ–±—É—é –ø–∞—Ä—Å–∏–Ω–≥ –ø–æ —Å—Å—ã–ª–∫–µ")
                    lyrics = get_lyrics_from_url(url)

                    if lyrics:
                        return lyrics
                    else:
                        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –ø–æ —Å—Å—ã–ª–∫–µ")

        print("‚ö†Ô∏è –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ Genius API, –ø—Ä–æ–±—É—é —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã...")

        # –†–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ 1: –ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞ Genius
        direct_lyrics = get_lyrics_direct(song_name, artist_name)
        if direct_lyrics:
            print("‚úÖ –¢–µ–∫—Å—Ç –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥ Genius")
            return direct_lyrics

        # –†–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ 2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ lyrics.ovh
        ovh_lyrics = get_lyrics_ovh(song_name, artist_name)
        if ovh_lyrics:
            print("‚úÖ –¢–µ–∫—Å—Ç –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ lyrics.ovh")
            return ovh_lyrics

        print("‚ùå –í—Å–µ –º–µ—Ç–æ–¥—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏")
        return None

    except lyricsgenius.GeniusError as ge:
        print(f"‚ùå Genius API –æ—à–∏–±–∫–∞: {ge}")
        return get_lyrics_direct(song_name, artist_name) or get_lyrics_ovh(
            song_name, artist_name
        )

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return get_lyrics_direct(song_name, artist_name) or get_lyrics_ovh(
            song_name, artist_name
        )
